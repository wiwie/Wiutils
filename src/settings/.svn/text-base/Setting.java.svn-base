package utils.settings;

import java.text.ParseException;

public abstract class Setting<DATA> {

	public enum SETTING_TYPE {
		BOOL, INT, LONG, FLOAT, DOUBLE, STRING, PATH
	}

	protected String name_;

	protected DATA val_;

	public Setting(final String name_) {
		this(name_, null);
	}

	public Setting(final String name_, final DATA initValue) {
		super();
		this.name_ = name_;
		this.val_ = initValue;
	}

	public DATA getValue() {
		return this.val_;
	}

	public abstract void parseValueFromString(String rawString)
			throws ParseException;

	public void setValue(final DATA newValue) {
		this.val_ = newValue;
	}

	// public static <T extends Setting<?>> Setting<?> getInstance(
	// final SETTING_TYPE settingType, final String name) {
	// if (settingType.equals(SETTING_TYPE.BOOL))
	// return new BooleanSetting(name);
	// else if (settingType.equals(SETTING_TYPE.INT))
	// return new IntegerSetting(name);
	// else if (settingType.equals(SETTING_TYPE.LONG))
	// return new LongSetting(name);
	// else if (settingType.equals(SETTING_TYPE.FLOAT))
	// return new FloatSetting(name);
	// else if (settingType.equals(SETTING_TYPE.DOUBLE))
	// return new DoubleSetting(name);
	// else if (settingType.equals(SETTING_TYPE.STRING))
	// return new StringSetting(name);
	// else if (settingType.equals(SETTING_TYPE.PATH))
	// return new PathSetting(name);
	// // default boolean
	// else
	// return new BooleanSetting(name);
	// }
}